// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: get_account.sql

package postgresql

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const getAccountByLogin = `-- name: GetAccountByLogin :one
SELECT 
    id, 
    password_hash, 
    created_at, 
    updated_at
FROM accounts
WHERE login = $1
`

type GetAccountByLoginRow struct {
	Id           uuid.UUID
	PasswordHash string
	CreatedAt    time.Time
	UpdatedAt    time.Time
}

func (q *Queries) GetAccountByLogin(ctx context.Context, login string) (GetAccountByLoginRow, error) {
	row := q.db.QueryRow(ctx, getAccountByLogin, login)
	var i GetAccountByLoginRow
	err := row.Scan(
		&i.Id,
		&i.PasswordHash,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getAccountByUserId = `-- name: GetAccountByUserId :one
SELECT 
    login, 
    password_hash, 
    created_at, 
    updated_at
FROM accounts
WHERE id = $1
`

type GetAccountByUserIdRow struct {
	Login        string
	PasswordHash string
	CreatedAt    time.Time
	UpdatedAt    time.Time
}

func (q *Queries) GetAccountByUserId(ctx context.Context, id uuid.UUID) (GetAccountByUserIdRow, error) {
	row := q.db.QueryRow(ctx, getAccountByUserId, id)
	var i GetAccountByUserIdRow
	err := row.Scan(
		&i.Login,
		&i.PasswordHash,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
