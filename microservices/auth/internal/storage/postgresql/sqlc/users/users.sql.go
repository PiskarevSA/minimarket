// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: users.sql

package users

import (
	"context"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO users (id, login, password_hash)
VALUES ($1, $2, $3)
`

type CreateUserParams struct {
	Id           uuid.UUID
	Login        string
	PasswordHash string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {
	_, err := q.db.Exec(ctx, createUser, arg.Id, arg.Login, arg.PasswordHash)
	return err
}

const getUserCreds = `-- name: GetUserCreds :one
SELECT
    id AS user_id,
    password_hash
FROM users
WHERE
    login = $1
`

type GetUserCredsRow struct {
	UserId       uuid.UUID
	PasswordHash string
}

func (q *Queries) GetUserCreds(ctx context.Context, login string) (GetUserCredsRow, error) {
	row := q.db.QueryRow(ctx, getUserCreds, login)
	var i GetUserCredsRow
	err := row.Scan(&i.UserId, &i.PasswordHash)
	return i, err
}
