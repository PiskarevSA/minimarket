// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: users.sql

package users

import (
	"context"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :one
WITH inserted AS (
    INSERT INTO 
        users (
            id, 
            login, 
            password_hash, 
            password_salt
        )
    VALUES 
        (
            $1 :: UUID, 
            $2 :: TEXT, 
            $3 :: TEXT, 
            $4 :: TEXT
        )
    ON CONFLICT (login) 
        DO NOTHING
    RETURNING 0 AS status
)

SELECT 
    status
FROM 
    inserted
UNION ALL
SELECT 
    1 AS status
FROM 
    users
WHERE 
    login = $2 :: TEXT
    AND NOT EXISTS (SELECT
        1 FROM inserted
    )
LIMIT 1
`

type CreateUserParams struct {
	Id           uuid.UUID
	Login        string
	PasswordHash string
	PasswordSalt string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (int32, error) {
	row := q.db.QueryRow(ctx, createUser,
		arg.Id,
		arg.Login,
		arg.PasswordHash,
		arg.PasswordSalt,
	)
	var status int32
	err := row.Scan(&status)
	return status, err
}
